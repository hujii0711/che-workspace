schemaVersion: 2.2.0
metadata:
  #name: vscode-websquare-0.0.19
  generateName: vscode-websquare  # 고정 이름 대신 동적 생성
components:
  - name: tools
    container:
      image: quay.io/devfile/universal-developer-image:latest
      memoryLimit: 2Gi
      mountSources: true
      env:
        - name: DEFAULT_EXTENSIONS
          value: "/tmp/websquare-web-extension-1.0.0.vsix;" #/tmp/vmware.vscode-boot-dev-pack-0.2.2.vsix;/tmp/ms-ceintl.vscode-language-pack-ko-1.105.2025091709.vsix
      volumeMounts:
        - name: tmp
          path: /tmp
  - name: tmp
    volume:
      size: 1Gi
  # vscode-backend-server 컴포넌트
  - name: vscode-backend-server
    container:
      image: localhost:5000/vscode-backend-image:0.0.1
      command: ["/bin/sh", "-c"]
      args: [
          "mkdir -p /webserver/certs && \
          cp /certs/tls.key /webserver/certs/vscode-backend.key && \
          cp /certs/tls.crt /webserver/certs/vscode-backend.cert && \
          chmod 600 /webserver/certs/vscode-backend.key && \
          node dist/app.js",
      ]
      memoryLimit: 2Gi
      mountSources: true # /projects 디렉터리 자동 마운트
      volumeMounts:
        - name: certs
          path: /webserver/certs
        - name: secret-certs
          path: /certs #시크릿 타입이 tls이므로 쿠버네티스가 자동으로 다음 이름으로 파일을 생성 /certs/tls.key, /certs/tls.crt
      endpoints:
        - name: vscode-backend
          targetPort: 11199
          exposure: public  # 외부 접근 허용 (필요 시 internal 유지)
          protocol: https   # HTTPS 프로토콜 명시
          secure: true      # TLS 활성화
          attributes:
            controller.devfile.io/endpoint-tls-secret: vscode-certs  # 클러스터 네임스페이스에 해당 vscode-certs 이 존재해야 동작
            controller.devfile.io/ingress-tls: true
      env:
        - name: NODE_ENV
          value: "production"
    # attributes:
    #   controller.devfile.io/volume-mount-secret: # Kubernetes 전용 설정으로 비밀 마운트 추가
    #     secret-certs:
    #       secretName: vscode-certs
    attributes:
      controller.devfile.io/volume-mount-secret: '{"secret-certs":{"secretName":"vscode-certs"}}'
  - name: certs
    volume:
      size: 1Gi
  - name: secret-certs
    volume: {}

commands:
  - id: install-websquare-vsix
    exec:
      component: tools
      commandLine: |
        curl -L --fail --silent --show-error -o /tmp/websquare-web-extension-1.0.0.vsix https://hujii0711.github.io/savezone/websquare-web-extension-1.0.0.vsix || { echo "Failed to download websquare-web-extension-1.0.0.vsix"; exit 1; }
      group:
        kind: run
  #- id: install-springboot-vsix
  #  exec:
  #    component: tools
  #    commandLine: |
  #      curl -L --fail --silent --show-error -o /tmp/vmware.vscode-boot-dev-pack-0.2.2.vsix https://hujii0711.github.io/savezone/vmware.vscode-boot-dev-pack-0.2.2.vsix || { echo "Failed to download vmware.vscode-boot-dev-pack-0.2.2.vsix"; exit 1; }
  #    group:
  #      kind: run
  #- id: install-ko-langpack-vsix
  #  exec:
  #    component: tools
  #    commandLine: |
  #      curl -L --fail --silent --show-error -o /tmp/ms-ceintl.vscode-language-pack-ko-1.105.2025091709.vsix https://hujii0711.github.io/savezone/ms-ceintl.vscode-language-pack-ko-1.105.2025091709.vsix || { echo "Failed to download vscode-language-pack-ko-1.105.2025091709.vsix"; exit 1; }
  #    group:
  #      kind: run
events:
  postStart:
    - install-websquare-vsix
    #- install-springboot-vsix
    #- install-ko-langpack-vsix
